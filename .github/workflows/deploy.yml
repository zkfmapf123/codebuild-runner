name: HelloWorld app

on:
  repository_dispatch:
    types: [webhook_triggered]
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
env:
  AWS_REGION: 'ap-northeast-2'
  ECS_CLUSTER: 'ecs-cluster'
  ECS_SERVICE: 'server'
  TASK_DEF: 'service'
  ECR_REPO: '182024812696.dkr.ecr.ap-northeast-2.amazonaws.com/ecs-server-registry'

jobs:
  build:
    name: Build Docker Image
    runs-on: codebuild-runner-${{ github.run_id }}-${{ github.run_attempt }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set outputs
        id: vars
        run: echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Setup AWS ECR Details
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{env.AWS_REGION}} 
      
      - name: echo test
        run: |
            echo "hello world"
            echo "code build runner"
            ls -al

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        id: build
        env:
          ECR_REPOSITORY: ${{ env.ECR_REPO }}
          IMAGE_TAG: v1.0.0.${{ steps.vars.outputs.short_sha }} ## not used
        run: |
            ls -al

            docker build -t $ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REPOSITORY:latest .
            docker push $ECR_REPOSITORY:$IMAGE_TAG
            docker push $ECR_REPOSITORY:latest
    outputs:
      image_tag: ${{ steps.build.outputs.image_tag }}
